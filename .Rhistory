geom_sf(data=full.input, aes(fill = factor(G.fuzzy)), colour = NA)+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
full.input$G.fuzzy<-as.factor(fit.fuzzy$group)
levels(full.input$G.fuzzy)<-factor(c("G7","G1","G6","G3","G2","G5","G4"))
full.input$G.fuzzy<-ordered(full.input$G.fuzzy,levels=c("G1","G2","G3","G4","G5","G6","G7"))
map.1st.vac.clu.f<-ggplot()+
geom_sf(data=full.input, aes(fill = factor(G.fuzzy)), colour = NA)+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
full.input$G.fuzzy<-as.factor(fit.fuzzy$group)
levels(full.input$G.fuzzy)<-factor(c("G7","G1","G6","G3","G2","G5","G4"))
full.input$G.fuzzy<-ordered(full.input$G.fuzzy,levels=c("G1","G2","G3","G4","G5","G6","G7"))
map.1st.vac.clu.f<-ggplot()+
geom_sf(data=full.input, aes(fill = factor(G.fuzzy)), colour = NA)+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
full.input$G.fuzzy<-as.factor(fit.fuzzy$group)
levels(full.input$G.fuzzy)<-factor(c("G7","G1","G6","G3","G2","G5","G4"))
levels(full.input$G.fuzzy)
full.input$G.fuzzy<-as.factor(fit.fuzzy$group)
levels(full.input$G.fuzzy)
full.input$G.fuzzy<-factor(full.input$G.fuzzy,levels=c("G1","G2","G3","G4","G5","G6","G7"))
levels(full.input$G.fuzzy)
map.1st.vac.clu.f<-ggplot()+
geom_sf(data=full.input, aes(fill = factor(G.fuzzy)), colour = NA)+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
map.1st.vac.clu.f<-ggplot()+
geom_sf(data=full.input, aes(fill = G.fuzzy), colour = NA)+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
map.1st.vac.clu.f<-ggplot()+
geom_sf(data=full.input, aes(fill = facotr(G.fuzzy)))+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
map.1st.vac.clu.f<-ggplot()+
geom_sf(data=full.input, aes(fill = factor(G.fuzzy)))+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
map.1st.vac.clu.f<-ggplot(full.input)+
geom_sf(data=full.input, aes(fill = factor(G.fuzzy)))+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
require(ggplot2)
require(RColorBrewer)
require(classInt)
require(ggrepel)
require(scales)
require(rgdal)
require(ggspatial)
require(extrafont)
require(viridis)
map.1st.vac.clu.f<-ggplot(full.input)+
geom_sf(data=full.input, aes(fill = factor(G.fuzzy)),colour=NA)+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
summary(full.input)
full.input$G.fuzzy<-as.factor(fit.fuzzy$group)
levels(full.input$G.fuzzy)<-factor(c("G7","G1","G6","G3","G2","G5","G4"))
full.input$G.fuzzy<-factor(full.input$G.fuzzy,levels=c("G1","G2","G3","G4","G5","G6","G7"))
summary(full.input)
map.1st.vac.clu.f<-ggplot(full.input)+
geom_sf(data=full.input, aes(fill = factor(G.fuzzy)),colour=NA)+
vivid
map.1st.vac.clu.f<-ggplot(full.input)+
geom_sf(data=full.input, aes(fill = factor(G.fuzzy)),colour=NA)+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
full.input$G.fuzzy<-as.factor(fit.fuzzy$group)
levels(full.input$G.fuzzy)<-factor(c("G7","G1","G6","G3","G2","G5","G4"))
map.1st.vac.clu.f<-ggplot(full.input)+
geom_sf(data=full.input, aes(fill = factor(G.fuzzy)),colour=NA)+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
full.input$G.fuzzy<-as.factor(fit.fuzzy$group)
levels(full.input$G.fuzzy)<-factor(c("G2","G5","G4","G7","G6","G3","G1"))
full.input$G.fuzzy<-factor(full.input$G.fuzzy,levels=c("G1","G2","G3","G4","G5","G6","G7"))
map.1st.vac.clu.f<-ggplot(full.input)+
geom_sf(data=full.input, aes(fill = factor(G.fuzzy)),colour=NA)+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
levels(full.input$G)<-factor(c("G1","G2","G3","G4","G5","G6","G7"))
map.1st.vac.clu<-ggplot()+
geom_sf(data=full.input, aes(fill = factor(G)), colour = NA)+
labs(fill = "Spatial clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.png",map.1st.vac.clu,width=200, height=200, units = "mm", dpi = 300, bg = "white")
levels(full.input$G)
full.input$G<-factor(full.input$G,levels=c("G1","G2","G3","G4","G5","G6","G7"))
map.1st.vac.clu<-ggplot()+
geom_sf(data=full.input, aes(fill = factor(G)), colour = NA)+
labs(fill = "Spatial clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.png",map.1st.vac.clu,width=200, height=200, units = "mm", dpi = 300, bg = "white")
full.input$G<-as.factor(fit$group)
levels(full.input$G)<-factor(c("G1","G2","G3","G4","G5","G6","G7"))
full.input$G<-factor(full.input$G,levels=c("G1","G2","G3","G4","G5","G6","G7"))
map.1st.vac.clu<-ggplot()+
geom_sf(data=full.input, aes(fill = factor(G)), colour = NA)+
labs(fill = "Spatial clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.png",map.1st.vac.clu,width=200, height=200, units = "mm", dpi = 300, bg = "white")
scr.theta
sfcr.theta
full.input$G.fuzzy<-as.factor(fit.fuzzy$group)
map.1st.vac.clu.f<-ggplot(full.input)+
geom_sf(data=full.input, aes(fill = factor(G.fuzzy)),colour=NA)+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.1st.vac.clu.f.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
select
fit.fuzzy$sBeta
fit.fuzzy$sSig
save.image("D:/OneDrive - Nexus365/WORK/Document/RESEARCH/COVID19/Accessibility analysis/3rd_modelling/SCR.exercise.20Nov2021.R.RData")
q()
n
load("D:/OneDrive - Nexus365/WORK/Document/RESEARCH/COVID19/Accessibility analysis/SCR exercise/gcs_est_3rd.RData")
fit.sfcr.100.cl7
fit.sfcr.100.cl7$Beta
full.input$G<-as.factor(fit.sfcr.100.cl7$group)
levels(full.input$G)<-factor(c("G1","G2","G3","G4","G5","G6","G7"))
full.input$G<-factor(full.input$G,levels=c("G1","G2","G3","G4","G5","G6","G7"))
require(ggplot2)
require(RColorBrewer)
require(classInt)
require(ggrepel)
require(scales)
require(rgdal)
require(ggspatial)
require(extrafont)
require(viridis)
loadfonts(device = "win")
font_import(pattern = 'Raleway',prompt=FALSE)
map.1st.vac.clu<-ggplot()+
geom_sf(data=full.input, aes(fill = factor(G)), colour = NA)+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("map.sfcr.c7.iter100.png",map.1st.vac.clu,width=200, height=200, units = "mm", dpi = 300, bg = "white")
getwd()
full.input$G.fuzzy<-as.factor(fit.sfcr.100.cl7$group)
levels(full.input$G.fuzzy)<-factor(c("G5","G1","G4","G6","G7","G2","G3"))
full.input$G.fuzzy<-factor(full.input$G.fuzzy,levels=c("G1","G2","G3","G4","G5","G6","G7"))
require(ggplot2)
require(RColorBrewer)
require(classInt)
require(ggrepel)
require(scales)
require(rgdal)
require(ggspatial)
require(extrafont)
require(viridis)
loadfonts(device = "win")
font_import(pattern = 'Raleway',prompt=FALSE)
map.1st.vac.clu.f<-ggplot(full.input)+
geom_sf(data=full.input, aes(fill = factor(G.fuzzy)),colour=NA)+
labs(fill = "Spatially fuzzy clusters of 1st vaccine uptake over 25") +
theme_bw(base_size=11)+
theme(legend.position = "bottom",legend.box="vertical",legend.margin=margin())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
annotation_scale(location = "br", height = unit(0.3, "cm"))+
annotation_north_arrow(location = "tl",
style = north_arrow_nautical,
height = unit(2, "cm"),
width = unit(2, "cm"))
ggsave("gcs.sfcr.c7.iter100.png",map.1st.vac.clu.f,width=200, height=200, units = "mm", dpi = 300, bg = "white")
load("D:/OneDrive - Nexus365/WORK/Document/RESEARCH/COVID19/Accessibility analysis/SCR exercise/RE/scr.model.est.update.01Dec2021.RData")
fit.sfcr.100.cl10
select.100
select.100$BIC
a<-select.100$BIC
a
a<-as.data.frame*select.100$BIC)
a<-as.data.frame(select.100$BIC)
a
install.packages("penreg")
install.packages("jplv7")
install.packages("glmnet")
install.packages("glmnet")
install.packages("jplv7")
q()
SparseM
require(SparseM)
###-----------------------------------------------------###
###   one-shot simulation experiment (data generation)  ###
###-----------------------------------------------------###
set.seed(1)
library(MASS)
scenario <- 2   # 1 (clustered case) or 2 (smoothed case)
phi <- 0.6    # range parameter for covariates
n <- 1000   # sample size
##  generation of sampling locations
Sp <- matrix(NA,n,2)
for(i in 1:n){
dd <- 0
while(dd<(0.5^2)){
rn <- c(runif(1,-1,1),runif(1,0,2))
dd <- sum(rn[1]^2+0.5*rn[2]^2)
}
Sp[i,] <- rn
}
## covariates
dd <- as.matrix(dist(Sp))
mat <- exp(-dd/phi)
z1 <- mvrnorm(1, rep(0, n), mat)
z2 <- mvrnorm(1, rep(0, n), mat)
x1 <- z1
rr <- 0.75
x2 <- rr*z1 + sqrt(1-rr^2)*z2
X <- cbind(x1,x2)
## correlation matrix for regression coefficients
V1 <- exp(-dd/1)
V2 <- exp(-dd/2)
V3 <- exp(-dd/3)
## Weight matrix for SCR
DD <- as.matrix(dist(Sp))
th <- 0.1
W <- matrix(0, n, n)
for(i in 1:n){
W[i,] <- ifelse(DD[i,]<th, 1, 0)
}
diag(W) <- 0
# Parameters (clustered case)
if(scenario==1){
Beta0 <- c()
Beta1 <- c()
Beta2 <- c()
Sig <- c()
M1 <- 2
M2 <- 3
Grid1 <- seq(-1, 1, length=M1+1)
Grid2 <- seq(0, 2, length=M2+1)
for(k in 1:M1){
for(j in 1:M2){
Ind <- (1:n)[Grid1[k]<Sp[,1] & Sp[,1]<Grid1[k+1] & Grid2[j]<Sp[,2] & Sp[,2]<Grid2[j+1]]
Beta0[Ind] <- 2*(Grid1[k] + Grid2[j])
Beta1[Ind] <- (Grid1[k]^2 + Grid2[j]^2)
Beta2[Ind] <- -(Grid1[k] + Grid2[j])
Sig[Ind] <- 0.5 + 0.2*abs(Grid1[k] - Grid2[j])
}
}
Beta <- cbind(Beta0, Beta1, Beta2)
}
# Parameters (smoothed case)
if(scenario==2){
Beta0 <- mvrnorm(1, rep(0,n), 2*V1)
Beta1 <- mvrnorm(1, rep(0,n), 2*V2)
Beta2 <- mvrnorm(1, rep(0,n), 2*V3)
Sig <- 0.2*exp(mvrnorm(1, rep(0,n), 0.5*V3))
Beta <- cbind(Beta0, Beta1, Beta2)
}
## Data
Mu <- apply(cbind(1,X)*Beta, 1, sum)
Y <- rnorm(n, Mu, Sig)
## save
save(Y, X, W, DD, Sp, Beta, file=paste0("simdata", scenario, ".RData"))
Y
###-----------------------------------------------------###
###     one-shot simulation experiment (fitting)        ###
###-----------------------------------------------------###
rm(list=ls())
set.seed(1)
library(spgwr)
library(glmnet)
library(ape)
source("SCR-function.R")
## load simulated dataset
scenario <- 1    # 1 (clustered case) or 2 (smoothed case)
load(paste0("simdata", scenario, ".RData"))
## GWR: geographically weighted regression
b.opt <- gwr.sel(Y~X, coords=Sp, verbose=F)
fit <- gwr(Y~X, coords=Sp, bandwidth=b.opt)
est0 <- cbind(fit$SDF$`(Intercept)`, fit$SDF$`Xx1`, fit$SDF$`Xx2`)
## SCR: spatially clustered regression
G.set <- seq(5, 30, by=5)
IC <- SCR.select(Y, X, W, Sp, G.set=G.set, Phi=1, print=F, family="gaussian")
hG <- IC$G    # optimal number of group via BIC
# SCR
fit1 <- SCR(Y, X, W, Sp, G=hG, Phi=1)
est1 <- fit1$sBeta
# SFCR
fit2 <- SCR(Y, X, W, Sp, G=hG, Phi=1, fuzzy=T)
est2 <- fit2$sBeta
## SHP: spatially homogeneity pursuit method
n <- length(Y)
MST <- mst(dist(Sp))    # minimum spanning tree
H <- c()
for(i in 1:n){
for(j in 1:n){
if(i<j){
if(MST[i,j]==1){
h <- rep(0, n)
h[i] <- 1
h[j] <- -1
H <- rbind(H, h)
}
}
}
}
HH <- rbind(H, rep(1/n, n))
invH <- solve(HH)
XX <- cbind(diag(n), diag(X[,1]), diag(X[,2]))
invHH <- matrix(0, 3*n, 3*n)
for(k in 1:3){
sub <- (1+n*(k-1)):(n*k)
invHH[sub, sub] <- invH
}
XH <- XX%*%invHH
pen <- rep(c(rep(1, n-1), 0), 3)
fit.SHP <- glmnet(x=XH, y=Y, family="gaussian", intercept=F, penalty.factor=pen)
BIC <- c()
for(j in 1:100){
mu <- as.vector(XH%*%as.vector(fit.SHP$beta[,j]))
sig <- sqrt(mean((Y-mu)^2))
BIC[j] <- -2*sum(dnorm(Y, mu, sig, log=T)) + log(n)*fit.SHP$df[j]
}
opt <- which.min(BIC)
est <- as.vector(invHH%*%as.vector(fit.SHP$beta[,opt]))
est.SHP <- matrix(est, n, 3)
## mean squared errors
# GWR
apply((est0-Beta)^2, 2, mean)
# SHP
apply((est.SHP-Beta)^2, 2, mean)
# SCR
apply((est1-Beta)^2, 2, mean)
# SFCR
apply((est2-Beta)^2, 2, mean)
setwd("d:/WORKSPACE/GIT/SCR")
###-----------------------------------------------------###
###     one-shot simulation experiment (fitting)        ###
###-----------------------------------------------------###
rm(list=ls())
set.seed(1)
library(spgwr)
library(glmnet)
library(ape)
source("SCR-function.R")
## load simulated dataset
scenario <- 1    # 1 (clustered case) or 2 (smoothed case)
load(paste0("simdata", scenario, ".RData"))
## GWR: geographically weighted regression
b.opt <- gwr.sel(Y~X, coords=Sp, verbose=F)
fit <- gwr(Y~X, coords=Sp, bandwidth=b.opt)
est0 <- cbind(fit$SDF$`(Intercept)`, fit$SDF$`Xx1`, fit$SDF$`Xx2`)
## SCR: spatially clustered regression
G.set <- seq(5, 30, by=5)
IC <- SCR.select(Y, X, W, Sp, G.set=G.set, Phi=1, print=F, family="gaussian")
hG <- IC$G    # optimal number of group via BIC
# SCR
fit1 <- SCR(Y, X, W, Sp, G=hG, Phi=1)
est1 <- fit1$sBeta
# SFCR
fit2 <- SCR(Y, X, W, Sp, G=hG, Phi=1, fuzzy=T)
est2 <- fit2$sBeta
## SHP: spatially homogeneity pursuit method
n <- length(Y)
MST <- mst(dist(Sp))    # minimum spanning tree
fit1 <- SCR(Y, X, W, Sp, G=hG, Phi=1,maxitr=50)
fit2 <- SCR(Y, X, W, Sp, G=hG, Phi=1,maxitr=100)
fit3 <- SCR(Y, X, W, Sp, G=hG, Phi=1,maxitr=150)
fit4 <- SCR(Y, X, W, Sp, G=hG, Phi=1,maxitr=200)
fit5 <- SCR(Y, X, W, Sp, G=hG, Phi=1,maxitr=250)
fit6 <- SCR(Y, X, W, Sp, G=hG, Phi=1,maxitr=300)
fit7 <- SCR(Y, X, W, Sp, G=hG, Phi=1,maxitr=350)
fit8 <- SCR(Y, X, W, Sp, G=hG, Phi=1,maxitr=400)
fit9 <- SCR(Y, X, W, Sp, G=hG, Phi=1,maxitr=450)
fit10 <- SCR(Y, X, W, Sp, G=hG, Phi=1,maxitr=500)
fit1
fit2
fit3
fit4
fit5
fi6
fi6
fit6
fit7
fit9
fit10
h
hG
